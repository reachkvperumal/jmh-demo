# JMH version: 1.37
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1
# VM invoker: /opt/homebrew/Cellar/openjdk/22.0.1/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.kv.jmh.util.metrics.RunWithOutPadTest.trace

# Run progress: 0.00% complete, ETA 00:05:24
# Fork: 1 of 3
# Warmup Iteration   1: 0.016 ops/ms
# Warmup Iteration   2: 0.017 ops/ms
Iteration   1: 0.017 ops/ms
Iteration   2: 0.017 ops/ms
Iteration   3: 0.017 ops/ms

# Run progress: 11.11% complete, ETA 00:04:51
# Fork: 2 of 3
# Warmup Iteration   1: 0.017 ops/ms
# Warmup Iteration   2: 0.017 ops/ms
Iteration   1: 0.017 ops/ms
Iteration   2: 0.017 ops/ms
Iteration   3: 0.017 ops/ms

# Run progress: 22.22% complete, ETA 00:04:15
# Fork: 3 of 3
# Warmup Iteration   1: 0.017 ops/ms
# Warmup Iteration   2: 0.017 ops/ms
Iteration   1: 0.017 ops/ms
Iteration   2: 0.017 ops/ms
Iteration   3: 0.017 ops/ms


Result "com.kv.jmh.util.metrics.RunWithOutPadTest.trace":
  0.017 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.017, 0.017, 0.017), stdev = 0.001
  CI (99.9%): [0.017, 0.017] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1
# VM invoker: /opt/homebrew/Cellar/openjdk/22.0.1/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.kv.jmh.util.metrics.RunWithOutPadTest.trace

# Run progress: 33.33% complete, ETA 00:03:38
# Fork: 1 of 3
# Warmup Iteration   1: 60.239 ms/op
# Warmup Iteration   2: 58.045 ms/op
Iteration   1: 58.125 ms/op
Iteration   2: 59.506 ms/op
Iteration   3: 59.133 ms/op

# Run progress: 44.44% complete, ETA 00:03:02
# Fork: 2 of 3
# Warmup Iteration   1: 57.920 ms/op
# Warmup Iteration   2: 59.417 ms/op
Iteration   1: 57.742 ms/op
Iteration   2: 58.283 ms/op
Iteration   3: 57.989 ms/op

# Run progress: 55.55% complete, ETA 00:02:25
# Fork: 3 of 3
# Warmup Iteration   1: 59.445 ms/op
# Warmup Iteration   2: 57.545 ms/op
Iteration   1: 58.600 ms/op
Iteration   2: 63.851 ms/op
Iteration   3: 62.479 ms/op


Result "com.kv.jmh.util.metrics.RunWithOutPadTest.trace":
  59.523 ±(99.9%) 3.638 ms/op [Average]
  (min, avg, max) = (57.742, 59.523, 63.851), stdev = 2.165
  CI (99.9%): [55.885, 63.161] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1
# VM invoker: /opt/homebrew/Cellar/openjdk/22.0.1/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: com.kv.jmh.util.metrics.RunWithOutPadTest.trace

# Run progress: 66.66% complete, ETA 00:01:49
# Fork: 1 of 3
# Warmup Iteration   1: 61.183 ±(99.9%) 5.073 ms/op
# Warmup Iteration   2: 60.142 ±(99.9%) 4.016 ms/op
Iteration   1: 58.839 ±(99.9%) 2.102 ms/op
                 p0.00:   45.744 ms/op
                 p0.50:   56.885 ms/op
                 p0.90:   70.097 ms/op
                 p0.95:   72.797 ms/op
                 p0.99:   77.578 ms/op
                 p0.999:  77.857 ms/op
                 p0.9999: 77.857 ms/op
                 p1.00:   77.857 ms/op

Iteration   2: 58.025 ±(99.9%) 2.089 ms/op
                 p0.00:   41.943 ms/op
                 p0.50:   56.361 ms/op
                 p0.90:   69.940 ms/op
                 p0.95:   73.348 ms/op
                 p0.99:   82.376 ms/op
                 p0.999:  87.032 ms/op
                 p0.9999: 87.032 ms/op
                 p1.00:   87.032 ms/op

Iteration   3: 58.626 ±(99.9%) 2.061 ms/op
                 p0.00:   43.385 ms/op
                 p0.50:   57.147 ms/op
                 p0.90:   70.438 ms/op
                 p0.95:   74.161 ms/op
                 p0.99:   77.946 ms/op
                 p0.999:  80.871 ms/op
                 p0.9999: 80.871 ms/op
                 p1.00:   80.871 ms/op


# Run progress: 77.77% complete, ETA 00:01:12
# Fork: 2 of 3
# Warmup Iteration   1: 59.079 ±(99.9%) 3.450 ms/op
# Warmup Iteration   2: 58.714 ±(99.9%) 3.369 ms/op
Iteration   1: 58.465 ±(99.9%) 1.990 ms/op
                 p0.00:   41.943 ms/op
                 p0.50:   56.885 ms/op
                 p0.90:   69.914 ms/op
                 p0.95:   71.932 ms/op
                 p0.99:   77.395 ms/op
                 p0.999:  79.692 ms/op
                 p0.9999: 79.692 ms/op
                 p1.00:   79.692 ms/op

Iteration   2: 57.732 ±(99.9%) 2.022 ms/op
                 p0.00:   41.943 ms/op
                 p0.50:   55.443 ms/op
                 p0.90:   69.009 ms/op
                 p0.95:   74.449 ms/op
                 p0.99:   77.038 ms/op
                 p0.999:  80.085 ms/op
                 p0.9999: 80.085 ms/op
                 p1.00:   80.085 ms/op

Iteration   3: 57.918 ±(99.9%) 2.160 ms/op
                 p0.00:   41.943 ms/op
                 p0.50:   56.099 ms/op
                 p0.90:   69.888 ms/op
                 p0.95:   73.571 ms/op
                 p0.99:   78.022 ms/op
                 p0.999:  78.119 ms/op
                 p0.9999: 78.119 ms/op
                 p1.00:   78.119 ms/op


# Run progress: 88.88% complete, ETA 00:00:36
# Fork: 3 of 3
# Warmup Iteration   1: 59.395 ±(99.9%) 4.330 ms/op
# Warmup Iteration   2: 58.515 ±(99.9%) 4.132 ms/op
Iteration   1: 58.055 ±(99.9%) 1.999 ms/op
                 p0.00:   44.892 ms/op
                 p0.50:   55.968 ms/op
                 p0.90:   69.599 ms/op
                 p0.95:   73.073 ms/op
                 p0.99:   77.629 ms/op
                 p0.999:  77.726 ms/op
                 p0.9999: 77.726 ms/op
                 p1.00:   77.726 ms/op

Iteration   2: 57.933 ±(99.9%) 2.023 ms/op
                 p0.00:   42.402 ms/op
                 p0.50:   56.033 ms/op
                 p0.90:   68.918 ms/op
                 p0.95:   73.217 ms/op
                 p0.99:   80.213 ms/op
                 p0.999:  82.444 ms/op
                 p0.9999: 82.444 ms/op
                 p1.00:   82.444 ms/op

Iteration   3: 59.551 ±(99.9%) 2.126 ms/op
                 p0.00:   43.188 ms/op
                 p0.50:   57.639 ms/op
                 p0.90:   71.329 ms/op
                 p0.95:   72.830 ms/op
                 p0.99:   88.101 ms/op
                 p0.999:  91.357 ms/op
                 p0.9999: 91.357 ms/op
                 p1.00:   91.357 ms/op



Result "com.kv.jmh.util.metrics.RunWithOutPadTest.trace":
  N = 1547
  mean =     58.344 ±(99.9%) 0.677 ms/op

  Histogram, ms/op:
    [ 40.000,  45.000) = 20 
    [ 45.000,  50.000) = 191 
    [ 50.000,  55.000) = 432 
    [ 55.000,  60.000) = 313 
    [ 60.000,  65.000) = 238 
    [ 65.000,  70.000) = 207 
    [ 70.000,  75.000) = 101 
    [ 75.000,  80.000) = 37 
    [ 80.000,  85.000) = 5 
    [ 85.000,  90.000) = 2 
    [ 90.000,  95.000) = 1 

  Percentiles, ms/op:
      p(0.0000) =     41.943 ms/op
     p(50.0000) =     56.492 ms/op
     p(90.0000) =     69.730 ms/op
     p(95.0000) =     73.086 ms/op
     p(99.0000) =     77.532 ms/op
     p(99.9000) =     88.987 ms/op
     p(99.9900) =     91.357 ms/op
     p(99.9990) =     91.357 ms/op
     p(99.9999) =     91.357 ms/op
    p(100.0000) =     91.357 ms/op


# JMH version: 1.37
# VM version: JDK 22.0.1, OpenJDK 64-Bit Server VM, 22.0.1
# VM invoker: /opt/homebrew/Cellar/openjdk/22.0.1/libexec/openjdk.jdk/Contents/Home/bin/java
# VM options: -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 3 s each
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.kv.jmh.util.metrics.RunWithOutPadTest.trace

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 1 of 3
# Warmup Iteration   1: 83.948 ms/op
# Warmup Iteration   2: 62.127 ms/op
Iteration   1: 51.829 ms/op
Iteration   2: 50.548 ms/op
Iteration   3: 61.453 ms/op

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 2 of 3
# Warmup Iteration   1: 77.236 ms/op
# Warmup Iteration   2: 57.138 ms/op
Iteration   1: 51.811 ms/op
Iteration   2: 42.655 ms/op
Iteration   3: 63.849 ms/op

# Run progress: 100.00% complete, ETA 00:00:00
# Fork: 3 of 3
# Warmup Iteration   1: 83.908 ms/op
# Warmup Iteration   2: 51.693 ms/op
Iteration   1: 54.857 ms/op
Iteration   2: 55.469 ms/op
Iteration   3: 63.357 ms/op


Result "com.kv.jmh.util.metrics.RunWithOutPadTest.trace":
  N = 9
  mean =     55.092 ±(99.9%) 11.618 ms/op

  Histogram, ms/op:
    [40.000, 42.500) = 0 
    [42.500, 45.000) = 1 
    [45.000, 47.500) = 0 
    [47.500, 50.000) = 0 
    [50.000, 52.500) = 3 
    [52.500, 55.000) = 1 
    [55.000, 57.500) = 1 
    [57.500, 60.000) = 0 
    [60.000, 62.500) = 1 
    [62.500, 65.000) = 2 
    [65.000, 67.500) = 0 

  Percentiles, ms/op:
      p(0.0000) =     42.655 ms/op
     p(50.0000) =     54.857 ms/op
     p(90.0000) =     63.849 ms/op
     p(95.0000) =     63.849 ms/op
     p(99.0000) =     63.849 ms/op
     p(99.9000) =     63.849 ms/op
     p(99.9900) =     63.849 ms/op
     p(99.9990) =     63.849 ms/op
     p(99.9999) =     63.849 ms/op
    p(100.0000) =     63.849 ms/op


# Run complete. Total time: 00:05:29

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                          Mode   Cnt   Score    Error   Units
RunWithOutPadTest.trace           thrpt     9   0.017 ±  0.001  ops/ms
RunWithOutPadTest.trace            avgt     9  59.523 ±  3.638   ms/op
RunWithOutPadTest.trace          sample  1547  58.344 ±  0.677   ms/op
RunWithOutPadTest.trace:p0.00    sample        41.943            ms/op
RunWithOutPadTest.trace:p0.50    sample        56.492            ms/op
RunWithOutPadTest.trace:p0.90    sample        69.730            ms/op
RunWithOutPadTest.trace:p0.95    sample        73.086            ms/op
RunWithOutPadTest.trace:p0.99    sample        77.532            ms/op
RunWithOutPadTest.trace:p0.999   sample        88.987            ms/op
RunWithOutPadTest.trace:p0.9999  sample        91.357            ms/op
RunWithOutPadTest.trace:p1.00    sample        91.357            ms/op
RunWithOutPadTest.trace              ss     9  55.092 ± 11.618   ms/op
